#ifdef GLSL
layout (local_size_x = __wg_sz__, local_size_y = 1, local_size_z = 1) in;
#endif
// CUCL INCLUDE gen-util.h
#ifdef GLSL
layout(set = 0, binding = 0) buffer matrix_a{
  %(b_tn) b[];
};

layout (set = 0, binding = 1) buffer POD
{
  uint32_t mode;
  float vi;
  %(cucl_arg_info_decls)
};

void main()


#else

CUCL_GLOBAL_KERNEL void %(rtc_func_name)( GASQ %(b_tn) * const b, // CUCL OUT_DYN K:N
                                          uint32_t const mode, // CUCL IN :
                                          float const vi // CUCL IN :
                                          %(cucl_arg_info_decls) )
#endif
{
  // CUCL IX GLOB_ID_1D b
  if( GLOB_ID_1D >= %(b_dims_prod) ) { return; }
  float val = %(vi); 
  if( %(mode) == 2 ) { val += %(GLOB_ID_1D_N); }
  if( %(mode) == 3 ) { val += %(GLOB_ID_1D_K); }
  else if( %(mode) == 4 ) { 
    if( (%(GLOB_ID_1D_N)==%(b_N_dim)/2) && (%(GLOB_ID_1D_K)==%(b_K_dim)/2) ) { val += 1.0f; }
  } else if( %(mode) == 5 ) {
    val += det_hash_rand( GLOB_ID_1D + 12738732 );
  } else if( %(mode) >= 100 ) {
    if( %(GLOB_ID_1D_N)==%(GLOB_ID_1D_K) ) { val += 1.0f; }
    //if( (%(GLOB_ID_1D_N)==%(b_N_dim)/2) && (%(GLOB_ID_1D_K)==%(b_K_dim)/2) ) { val += 1.0f; }
  }
  store_float_to_rp_%(b_tn)( val, GLOB_ID_1D, b );
}
